AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "VisualCodeStudio Lambda Stack"

Globals:
  Function:
    Timeout: 10

Resources:
  API:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: AWS_IAM
        InvokeRole: NONE

  Microservice:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MicroserviceAPI/
      Handler: index.handler
      Runtime: nodejs10.x
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cloudformation:CreateStack
                - cloudformation:CreateChangeSet
                - cloudformation:ListStacks
                - cloudformation:UpdateStack
                - cloudformation:DeleteStack
                - cloudformation:DescribeStacks
                - cloudformation:DescribeStackResource
                - cloudformation:DescribeStackEvents
                - cloudformation:ValidateTemplate
                - cloudformation:DescribeChangeSet
                - cloudformation:ExecuteChangeSet
              Resource: "*"
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !GetAtt CloudformationRole.Arn
      Environment:
        Variables:
          CLOUDFORMATION_ROLE_ARN: !GetAtt CloudformationRole.Arn
          EMAIL_CUSTOM_RESOURCE_ARN: !GetAtt SendEmailCustomResource.Arn
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref API
            Path: /
            Method: any
        Proxy:
          Type: Api
          Properties:
            RestApiId: !Ref API
            Path: /{proxy+}
            Method: any

  LifecycleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: VisualCodeButton/
      Handler: app.handler
      Runtime: python3.7
      Events:
        IoTButtonClick:
          Type: IoTRule
          Properties:
            Sql: "SELECT * FROM 'iotbutton/G030PT037161NGQ5'"
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserParamsTable
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action: "execute-api:*"
              Resource:
                Fn::Join:
                  - ""
                  - - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:"
                    - !Ref API
                    - "/*/*/*"
            # - Effect: Allow
            #   Action:
            #     - cloudformation:CreateStack
            #     - cloudformation:CreateChangeSet
            #     - cloudformation:ListStacks
            #     - cloudformation:UpdateStack
            #     - cloudformation:DeleteStack
            #     - cloudformation:DescribeStacks
            #     - cloudformation:DescribeStackResource
            #     - cloudformation:DescribeStackEvents
            #     - cloudformation:ValidateTemplate
            #     - cloudformation:DescribeChangeSet
            #     - cloudformation:ExecuteChangeSet
            #   Resource: "*"
            # - Effect: Allow
            #   Action:
            #     - iam:PassRole
            #   Resource: !GetAtt CloudformationRole.Arn
      Environment:
        Variables:
          # CLOUDFORMATION_ROLE_ARN: !GetAtt CloudformationRole.Arn
          # EMAIL_CUSTOM_RESOURCE_ARN: !GetAtt SendEmailCustomResource.Arn
          MICROSERVICE_ENDPOINT: !Sub "https://${API}.execute-api.${AWS::Region}.amazonaws.com"
          USERS_PARAMS_TABLE_NAME: !Ref UserParamsTable

  SendEmailCustomResource:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SendEmailCustomResource/
      Handler: app.handler
      Runtime: python3.7
      Policies:
        - SESCrudPolicy:
            IdentityName: code.immutable.run

  CloudformationRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  UserParamsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: user_id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 1
